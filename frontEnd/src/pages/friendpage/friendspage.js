import styles from "./friendsPage.module.css";
import classNames from "classnames/bind";
import { useSelector } from "react-redux";
import { useState } from "react";
import { findnewfriend } from "../../services/Friends/findnewfriend";
import AddFriends from "../../component/friends/addfriends/addfriends";
import FriendsList from "../../component/friends/listfriend/listfriend";
import SentRequestList from "../../component/friends/sentrequestlist/sentrequestlist";
import FriendsRequestList from "../../component/friends/friendsrequest/friendrequest";

const cx = classNames.bind(styles);

function FriendsPage() {
  const [finduser, setFindUser] = useState(null);
  const [friendCode, setFriendCode] = useState("");
  const stateUser = useSelector((state) => state.user);
  const currentUser = stateUser?.user || null;
  const friends = currentUser?.friends || [];
  const sentRequests = currentUser?.sentRequests || [];
  const friendRequests = currentUser?.friendRequests || [];
  const [abbert, setAbbert] = useState("");

  const handleFindNewFriend = async () => {
    try {
      setFindUser(null);
      if (!currentUser?._id) {
        setAbbert("B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p ho·∫∑c thi·∫øu th√¥ng tin ng∆∞·ªùi d√πng.");
        return;
      }
      const response = await findnewfriend(friendCode, currentUser._id);
      if (response?.success) {
        setFindUser(response.newfriend);
      } else {
        setAbbert(response?.message || "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng");
      }
    } catch (error) {
      console.error("L·ªói khi g·ªçi API:", error);
      setAbbert("C√≥ l·ªói x·∫£y ra khi t√¨m ki·∫øm.");
    }
  };

  return (
    <div className={cx("container")}> 
      <h1 className={cx("app-title")}>B·∫°n b√®</h1>

      {/* T√¨m ki·∫øm b·∫°n m·ªõi */}
      <div className={cx("section")}> 
        <div className={cx("searchBox")}>
          <input
            type="text"
            placeholder="üîç Nh·∫≠p m√£ b·∫°n b√®..."
            value={friendCode}
            onChange={(e) => setFriendCode(e.target.value)}
          />
          <button onClick={handleFindNewFriend} className="app-btn">
            T√¨m
          </button>
        </div>

        <div className={cx("card")}> 
          <h2 className={cx("section-title")}>K·∫øt qu·∫£ t√¨m ki·∫øm</h2>
          {finduser ? (
            <div className={cx("userCard")}>
              {currentUser?._id && (
                <AddFriends currentUserId={currentUser._id} finduser={finduser} />
              )}
            </div>
          ) : abbert ? (
            <p>{abbert}</p>
          ) : (
            <p>Ch∆∞a c√≥ k·∫øt qu·∫£</p>
          )}
        </div>
      </div>

      {/* L·ªùi m·ªùi k·∫øt b·∫°n */}
      <div className={cx("section")}> 
        <div className={cx("card")}> 
          <h2 className={cx("section-title")}>L·ªùi m·ªùi k·∫øt b·∫°n</h2>
          <div className={cx("requestTabs")}>
            <div className={cx("SentrequestList")}>
              <h3>ƒê√£ g·ª≠i</h3>
              {sentRequests.length > 0 ? (
                sentRequests.map((f, index) => (
                  <SentRequestList
                    key={f?.to?._id || f?.to || index}
                    currentUserId={currentUser._id}
                    id={f?.to?._id || f?.to}
                  />
                ))
              ) : (
                <p>Kh√¥ng c√≥ l·ªùi m·ªùi n√†o ƒë∆∞·ª£c g·ª≠i</p>
              )}
            </div>

            <div className={cx("requestSection")}>
              <h3>ƒê√£ nh·∫≠n</h3>
              {friendRequests.length > 0 ? (
                friendRequests.map((f, index) => (
                  <FriendsRequestList
                    key={f?.From?._id || f?.from || index}
                    currentUserId={currentUser._id}
                    id={f?.from?._id || f?.from}
                  />
                ))
              ) : (
                <p>H·ªôp th∆∞ r·ªóng r·ªìi, k·∫øt b·∫°n ngay th√¥i!</p>
              )}
            </div>
          </div>
        </div>
      </div>

      {/* Danh s√°ch b·∫°n b√® */}
      <div className={cx("section")}> 
        <div className={cx("card")}> 
          <h2 className={cx("section-title")}>Danh s√°ch b·∫°n b√®</h2>
          <div className={cx("friendsList")}>
            {friends.length > 0 ? (
              friends.map((f) => (
                <FriendsList key={f} currentUserId={currentUser._id} id={f} />
              ))
            ) : (
              <p>Nhanh th√™m b·∫°n n√†o</p>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}

export default FriendsPage;
